[default]
clusterSubmitCmd=msub
clusterSubmitCmdSuffix= | grep \"[0-9]\"
clusterWalltime=-l walltime=24:00:0
clusterCPU=-l nodes=1:ppn=1
clusterOtherArg=-V -m ae -M $JOB_MAIL -W umask=0002 -l qos=hiseq
clusterQueue=-q sw
clusterWorkDirArg=-d
clusterOutputDirArg=-j oe -o
clusterJobNameArg=-N
clusterCmdProducesJobId=true
clusterDependencyArg=-W x=depend:afterok:
clusterDependencySep=:

extraJavaFlags=-XX:ParallelGCThreads=4
tmpDir=/lb/scratch/

technologyName=HiSeq
moduleVersion.java=mugqic/java/openjdk-jdk1.7.0_60
moduleVersion.tools=mugqic/tools/1.9
moduleVersion.bvatools=mugqic/bvatools/1.2
moduleVersion.picard=mugqic/picard/1.100
moduleVersion.bwa=mugqic/bwa/0.7.6a
moduleVersion.casava=mugqic/BCL2FASTQ/1.8.4
moduleVersion.cranR=mugqic/R/3.0.0

fetchCasavaSheetCommand=wget --post-file ~/.nanuqAuth.txt --no-cookies --directory-prefix ${runDirectory}  \'https://genomequebec.mcgill.ca/nanuqMPS/sampleSheet/${technology}/${runID}/SampleSheet.nanuq.csv\'
fetchNanuqSheetCommand=wget --post-file ~/.nanuqAuth.txt --no-cookies --directory-prefix ${runDirectory}  \'https://genomequebec.mcgill.ca/nanuqMPS/csv/technology/${technology}/run/${runID}/filename/run.nanuq.csv\'

genomesHome=/sb/programs/analyste/genomes/
numberMismatches=1

# will have ".lane" suffix
unalignedDirPrefix=Unaligned
alignedDirPrefix=Aligned

# regexp:genome:build~
defaultSpeciesGenome=(hs|human|homo.sapiens?):Homo_sapiens:hg1k_v37
#~(mouse|mus.musculus):Mus_musculus:mm10


[generateFastq]
casavaCmd=configureBclToFastq.pl
baseCallDir=/Data/Intensities/BaseCalls
casavaSampleSheetPrefix=nanuqSampleSheet.
sendNotification=1
startNotificationCommand=wget --no-cookies --directory-prefix ${runDirectory}/ --post-file ~/.nanuqAuth.txt \"https://genomequebec.mcgill.ca/nanuqMPS/addRunAudit?technology=${technology}&run=${runID}&region=${lane}&value=Fastq Generation (${mask} mismatches:${mismatches})&category=PROCESSING\" -O wgetFastqStart.${lane}.out
clusterWalltime=-l walltime=12:00:0
clusterCPU=-l nodes=1:ppn=2
nbThreads=2

[generateIndexCount]
extraJavaFlags=-Dsamjdk.buffer_size=10485760 -XX:ParallelGCThreads=1
maxRam=12G
jar=/sb/programs/analyste/software/java-tools/CountIlluminaBarcodes-1.0-jar-with-dependencies.jar
barcodeFile=/sb/programs/analyste/software/barcodes.txt
clusterWalltime=-l walltime=12:00:0
clusterCPU=-l nodes=1:ppn=3

[generateMD5]
clusterWalltime=-l walltime=12:00:0
clusterCPU=-l nodes=1:ppn=1

[generateQCGraphs]
extraJavaFlags=-XX:ParallelGCThreads=4 -Djava.awt.headless=true
maxRam=20G
clusterWalltime=-l walltime=48:00:0
clusterCPU=-l nodes=1:ppn=5
nbThreads=5

[generateBlasts]
clusterWalltime=-l walltime=48:00:0
clusterCPU=-l nodes=1:ppn=5
# priority to the number by sample, if set
blastToDoPerSample=10000
blastToDoPerLane=

[startCopyNotification]
sendNotification=1
notificationCommand=wget --no-cookies --directory-prefix ${runDirectory}/ --post-file ~/.nanuqAuth.txt \'https://genomequebec.mcgill.ca/nanuqMPS/addRunAudit?technology=${technology}&run=${runID}&region=${lane}&value=Fastq and QC complete&category=PROCESSING_COMPLETE\' -O wgetFastqGen.${lane}.out && wget --no-cookies --directory-prefix ${runDirectory}/ --post-file ~/.nanuqAuth.txt \'https://genomequebec.mcgill.ca/nanuqMPS/addRunAudit?technology=${technology}&run=${runID}&region=${lane}&value=Running Rsync and calling nanuq&category=LOADING\' -O wgetRsyncStart.${lane}.out
clusterQueue=-q xfer
clusterWalltime=-l walltime=1:00:0
clusterCPU=-l nodes=1:ppn=1

[copy]
clusterWalltime=-l walltime=24:00:0
clusterCPU=-l nodes=1:ppn=2
destinationFolder=/lb/robot/hiSeqSequencer/hiSeqRuns-drop/
copyCommand=rsync -avP --include \'**/*onfig*\' --exclude \'*insert*.pdf\' --exclude \'*mugqic*.done\' --exclude \'*.dup.ba?\' --exclude \'**/Temp/\' --include \'${Unaligned}.${lane}/**\' --include \'${Unaligned}.${lane}\' --include \'${Aligned}.${lane}/**\' --include \'${Aligned}.${lane}\' --exclude \'${Unaligned}.*\' --exclude \'${Aligned}.*\' --exclude \'Thumbnail_Images/\' --exclude \'Images/\' --exclude \'Data/Intensities/B*/*\' --include \'Data/Intensities/B*/\' --exclude \'Data/Intensities/*\' ${runDirectory}/ ${destinationFolder}${runName}_${lane}/ && setfacl -R -m mask:rwx ${destinationFolder}${runName}_${lane}

[endCopyNotification]
sendNotification=1
notificationCommand=wget --no-cookies --directory-prefix ${runDirectory}/ --post-file ~/.nanuqAuth.txt \'https://genomequebec.mcgill.ca/nanuqMPS/AssociateRunPage/path/${runName}_${lane}/tech/${technology}/lane/${lane}\' -O wgetAssociateDone.${lane}.out
clusterQueue=-q xfer
clusterWalltime=-l walltime=1:00:0
clusterCPU=-l nodes=1:ppn=1

[markDup]
markDupRam=14G
markDupRecInRam=3500000
extraJavaFlags=-XX:ParallelGCThreads=4 -Dsamjdk.use_async_io=true
clusterWalltime=-l walltime=48:00:0
clusterCPU=-l nodes=1:ppn=3

[collectMetrics]
collectMetricsRam=4G
collectMetricsRecInRam=1000000
clusterWalltime=-l walltime=48:00:0
clusterCPU=-l nodes=1:ppn=2

[depthOfCoverage]
# you can set it implicitly, leave blank for whole genome or set auto which uses the sampleSheet to identify the bed file.
coverageTargets=auto
# maxDepth is RAM limited. maxDepth * 8 * nbIntervals ~= RAM needed
extraFlags="--gc --maxDepth 1001 --summaryCoverageThresholds 10,25,50,75,100,500,1000 --minMappingQuality 15 --minBaseQuality 15 --ommitN --simpleChrName --threads 2"
ram=13G
clusterWalltime=-l walltime=48:00:0
clusterCPU=-l nodes=1:ppn=3
fetchBedFiles=1
fetchBedFileCommand=wget --post-file ~/.nanuqAuth.txt --no-cookies --directory-prefix ${runDirectory} \'https://genomequebec.mcgill.ca/nanuqLimsCgi/targetRegion/downloadBed.cgi?bedName=${bedFile}\' -O \'${bedFile}\'

[calculateHSMetrics]
ram=4G
clusterWalltime=-l walltime=24:00:0
clusterCPU=-l nodes=1:ppn=2

[mem]
bwaExtraFlags=-M -t 11
bwaInstitution=McGill University and Genome Quebec Innovation Center
sortRam=54G
sortRecInRam=13500000
clusterWalltime=-l walltime=24:00:0
clusterCPU=-l nodes=1:ppn=12


