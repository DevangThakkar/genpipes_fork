#!/usr/bin/env perl

use strict;
use warnings;

BEGIN{
    #Makesure we can find the GetConfig::LoadModules module relative to this script install
	use File::Basename;
	use Cwd 'abs_path';
	my ( undef, $mod_path, undef ) = fileparse( abs_path(__FILE__) );
	unshift @INC, $mod_path."lib";
}

use Env qw/TMPDIR PATH PYTHONPATH PERL5LIB/;

use Getopt::Long;
use POSIX qw/strftime/;
use Sys::Hostname;
use Statistics::Descriptive;
use List::Util qw(sum);
use PDF::Create;
use PDF::Create;
use File::Spec::Functions qw(rel2abs);
use File::Basename;
use File::Temp;
use File::Which;
use File::Path qw(make_path remove_tree);
use Job;

# Libraries mugqic
use Iterator::FastqDb;
use Iterator::FastaDb;
use RRNAAmplicons;
use MicrobialEcology;
use LoadConfig;
use SampleSheet;
use SubmitToCluster;

our $VERSION = "0.5";
$SIG{INT} = sub{exit}; #Handle ungraceful exits with CTRL-C.

my $usage=<<'ENDHERE';
NAME:
RRNATagger_diversity.pl

Step 1- filter_for_pynast
Step 2- pynast
Step 3- filter_pynast_alignment
Step 4- fasttree
Step 5- filter_otu_table
Step 6- convert_otu_table
Step 7- summarize_taxonomy_absolute_L1
Step 8- summarize_taxonomy_absolute_L2
Step 9- summarize_taxonomy_absolute_L3
Step 10- summarize_taxonomy_absolute_L4
Step 11- summarize_taxonomy_absolute_L5
Step 12- summarize_taxonomy_absolute_L6
Step 13- summarize_taxonomy_relative_L1
Step 14- summarize_taxonomy_relative_L2
Step 15- summarize_taxonomy_relative_L3
Step 16- summarize_taxonomy_relative_L4
Step 17- summarize_taxonomy_relative_L5
Step 18- summarize_taxonomy_relative_L6
Step 19- plot_taxonomy_absolute
Step 20- beta_diversity_unweighted
Step 21- beta_diversity_weighted
Step 22- beta_diversity_bray_curtis
Step 23- principal_coordinates_unweighted
Step 24- principal_coordinates_weighted
Step 25- principal_coordinates_braycurtis
Step 26- pca2dplot_unweighted
Step 27- pca3dplot_unweighted
Step 28- pca2dplot_weighted
Step 29- pca3dplot_weighted
Step 30- pca2plot_braycurtis
Step 31- pca3dplot_braycurtis
Step 32- multiple_rarefaction
Step 33- alpha_diversity
Step 34- collate_alpha
Step 35- rarefaction_plots
Step 36- upgma_clustering_unweighted
Step 37- upgma_clustering_weighted
Step 38- upgma_clustering_braycurtis
Step 39- otu_heatmap
Step 40- phylum_barplot_all
Step 41- phylum_barplot_relative
Step 42- cleanup

PURPOSE:
Classify sequences with RDP classifier using a Greengene training set
Generate OTU table in Qiime format
Generate PCA + taxonomic summary and various other metrics graphs and 
spreadsheets using the Qiime tools (if --mapping_file is provided)
The purpose of this pipeline is to generate diversity metrics, graph
etc, after having manually parsed files generated by itagger. (Say
for instance, one wants to remove chloroplast OTUs from a OTU table
and re-analyze his data with these modifications. 

INPUT:
--infile_otu_table <string>       : OTU table. if --infile_otu_table arg, then don't provide 
                                    --infile_cluster_table and --infile_cluster_fasta args.
--infile_otu_fasta <string>       : Infile having OTU sequences corresponding to OTU table 
                                    specified in --infile_otu
--barcodes <string>               : Barcode file in fasta format.
--config_file <string>            : Configuration file containing paths to the RDP training set, 
                                    and core alignment database.

ADVANCED OPTIONS
--start_at <int>                  : Pipeline will be launched at step n (optional - mostly 
                                    for debugging)
--end_at <int>                    : Pipeline will stop its execution at step n (optional - mostly 
                                    for debugging)
--keep_singlets                   : If set, singlets won't be removed from cluster table 
                                    (SeqObs table). By Default, singlets will be remove
                                    from submitted cluster table.
--no_unifrac                      : Set this flag if no unifrac distance is needed. For 
                                    instance, if no reference tree is availble.

OUTPUT:
Specify outdir in ini/config file

NOTES:
--infile_cluster_table <string> --infile_clusterfasta <string> <other args>

Or optional:
--infile_cluster_table <string>   : Cluster table. Table have to correspond to the cluster 
                                    sequences fasta file also submitted
--infile_cluster_fasta <string>   : Cluster to analyze in fasta format


BUGS/LIMITATIONS:

AUTHOR/SUPPORT:
Julien Tremblay - julien.tremblay@mail.mcgill.ca
Qiime tools - www.qiime.org	

ENDHERE

## OPTIONS
my (
	$help, $infile_cluster_fasta, $infile_cluster_table, $log, $barcodes, 
	$start_at, $end_at, $mapping_file, $config_file, $no_unifrac,
	$keep_singlets, $infile_otu_table, $infile_otu_fasta
);
my $verbose = 0;

my @cmd = @ARGV;

## Place current dir in $ENV{PATH} values
my $bin_dir_name = dirname(rel2abs($0));
$ENV{PATH} = $bin_dir_name.":".$ENV{PATH};

GetOptions(
    'infile_cluster_fasta=s' 	=> \$infile_cluster_fasta,
    'infile_cluster_table=s' 	=> \$infile_cluster_table,
	'infile_otu_table=s'		=> \$infile_otu_table,
	'infile_otu_fasta=s'		=> \$infile_otu_fasta,
	'barcodes=s' 				=> \$barcodes,
	'config_file=s'				=> \$config_file,
	'no_unifrac'				=> \$no_unifrac,
	'keep_singlets'				=> \$keep_singlets,
	#'mapping_file=s'            => \$mapping_file,
	'start_at=i' 				=> \$start_at,
	'end_at=i'   				=> \$end_at,
    'verbose' 					=> \$verbose,
    'help' 						=> \$help
);
if ($help) { print $usage; exit; }

## VALIDATE
die("--config_file arg missing\n") unless($config_file);
my $rHoAoH_sampleInfo;
my %cfg    = LoadConfig->readConfigFile($config_file);
my $outdir = LoadConfig::getParam(\%cfg, 'default', 'currentDir');

$TMPDIR = LoadConfig::getParam(\%cfg, 'default', 'tmpDir');
die "No tempdir specified, please specify a \$TMPDIR variable in your environment.\n" if(!$TMPDIR);
my $tmpdir = File::Temp->newdir(
	"tmpDirItaggerDiversityXXXXXXX",
	DIR => $TMPDIR."/",
	CLEANUP => 0 #Let itagger.pl manage the removal of temp files.
);
mkdir $tmpdir unless -d $tmpdir;

if($infile_otu_table){
	die("Must specify --infile_otu AND --infile_otu_fasta\n") if(!$infile_otu_fasta);
	die("--infile_otu does not exists! Typed wrong filename?\n") if((!-e $infile_otu_table) and (!-s $infile_otu_table));
	die("--infile_otu does not exists! Typed wrong filename?\n") if((!-e $infile_otu_table) and (!-s $infile_otu_table));
}else{
	die("--infile_cluster_fasta does not exists! Typed wrong filename?\n") if((!-e $infile_cluster_fasta) and (!-s $infile_cluster_fasta));
	die("--infile_cluster_table File does not exist! Typed wrong filename?\n") if((!-e $infile_cluster_table) and (!-s $infile_cluster_table));	
}
die("For input files, please submit either\n--infile_cluster_table <string> --infile_clusterfasta <other args>\nOR\n--infile_otu <string> --infile_otu_fasta <string> <other args>\n") if(
	($infile_cluster_fasta and $infile_otu_table) or
	($infile_cluster_table and $infile_otu_fasta)
);
die("Must specify --infile_otu AND --infile_otu_fasta\n") if($infile_otu_fasta and !$infile_otu_table);
die("--outdir required\n") unless $outdir;
$mapping_file =  LoadConfig::getParam(\%cfg, 'default', 'mappingFile');
if($mapping_file){
	die("--mapping_file does not exists! Typed wrong filename?\n") if((!-e $mapping_file) and (!-s $mapping_file));
}
die("--barcodes file is empty or does not exists! (Typed wrong filename?)\n") if((!-e $barcodes) and (!-s $barcodes));

$start_at = 1 unless $start_at;
$end_at = 999 unless $end_at;
my $currStep = 1;

$start_at = 0 unless $start_at;
$outdir = substr($outdir, 0, length($outdir)-1 ) if substr($outdir, -1) eq "/";

# Make common root outdir and subdirs
mkdir $outdir unless -d $outdir;
print STDOUT "mkdir -p $outdir\n";
system("mkdir -p $outdir");
my $barcodes_filename = basename($barcodes);

SubmitToCluster::initPipeline;
print STDOUT "export PATH=./scripts:\$PATH\n";

# Try to remove fasta extensions.
if($barcodes_filename =~ m/(.*)\.fasta|fsa|fa|fas|fna/i){
	$barcodes_filename = $1;
}	
$outdir .= "/".$barcodes_filename."/diversity";
system("mkdir -p ".$outdir);
print STDOUT "mkdir -p ".$outdir."\n";
system("mkdir -p ".$outdir."/obs");
print STDOUT "mkdir -p ".$outdir."/obs\n";
makeSubDirs($outdir);

my $dependency = undef;

## MAIN
print STDERR "[DEBUG] **************************************************************** \n";
print STDERR "[DEBUG] ****** Generating RRNATagger diversity pipeline commands...***** \n";
print STDERR "[DEBUG] **************************************************************** \n";


#################################
# Remove singlets
#
unless($keep_singlets or $infile_otu_table or $infile_otu_fasta){
	
	my $rO_jobFilterObsTable = MicrobialEcology::filterObsTable(
		\%cfg,
		$infile_cluster_table,
		$infile_cluster_fasta,
		"1",
		$outdir."/obs/obs_filtered.tsv",
		$outdir."/obs/obs_filtered.fasta"
	);
	if(!$rO_jobFilterObsTable->isUp2Date()) {
		SubmitToCluster::printSubmitCmd(\%cfg, "filter_obs", "filter_obs", "FILTEROBS", $dependency, "global", $rO_jobFilterObsTable) if($start_at <= $currStep && $end_at >= $currStep); 
		$dependency = $rO_jobFilterObsTable->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
	}
	print STDERR "[DEBUG]\tStep #".$currStep." filter_obs\n";
	$currStep++;
}

# Choose right otu table depending on the input...
my $curr_otu_table;
my $curr_fasta;
my $otu_table_prefix = "";
my $otu_fasta_prefix = "";
my $curr_cluster_table;

if($infile_otu_table){
	$curr_otu_table = $infile_otu_table;
	$curr_fasta = $infile_otu_fasta;
	$otu_table_prefix = basename($infile_otu_table);
	$otu_fasta_prefix = basename($infile_otu_fasta);

	$otu_table_prefix =~ s{\.[^.]+$}{};
	$otu_fasta_prefix =~ s{\.[^.]+$}{};
}else{
	$curr_otu_table = "";
	if($keep_singlets){
		$curr_fasta = $outdir."/obs/obs_filtered.fasta";
		$curr_cluster_table = $outdir."/obs/obs_filtered.tsv";
	}else{
		$curr_fasta = $infile_cluster_fasta;
		$curr_cluster_table = $infile_cluster_table;
	}
}
$otu_fasta_prefix = "fasta_clusters_filtered";

# Just do this step if no OTU tables where provided in input
if($infile_cluster_fasta and $infile_cluster_table){
	print STDERR "[DEBUG] infile cluster table: " . $infile_cluster_table."\n" if($verbose);
	print STDERR "[DEBUG] infile cluster fasta: " . $infile_cluster_fasta."\n" if($verbose);
	
	# RDP_classifier
	my $rO_jobRDPClassifier = MicrobialEcology::RDPClassifier(
		\%cfg,
		$curr_fasta,
		$outdir."/rdp/rdp.tsv"
	);
	if(!$rO_jobRDPClassifier->isUp2Date()) {
		SubmitToCluster::printSubmitCmd(\%cfg, "RDP", "RDP", "RDP", $dependency, "global", $rO_jobRDPClassifier) if($start_at <= $currStep && $end_at >= $currStep); 
		$dependency = $rO_jobRDPClassifier->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
	}
	print STDERR "[DEBUG]\tStep #".$currStep." RDP\n";
	$currStep++;

	# Add rdp taxonomy to SeqObs table
	my $rO_jobAddTaxToObs = MicrobialEcology::addTaxToObs(
		\%cfg,
		$infile_cluster_table,
		$outdir."/rdp/rdp.tsv",
		$outdir."/otu_tables/otu_table.tsv",
		$outdir."/otu_tables/otu_table_failed.tsv"
	);
	if(!$rO_jobAddTaxToObs->isUp2Date()) {
		SubmitToCluster::printSubmitCmd(\%cfg, "add_taxonomy", "add_taxonomy", "ADDTAXONOMY", $dependency, "global", $rO_jobAddTaxToObs) if($start_at <= $currStep && $end_at >= $currStep); 
		$dependency = $rO_jobAddTaxToObs->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
	}
	print STDERR "[DEBUG]\tStep #".$currStep." add_taxonomy\n";
	$currStep++;
	
	$curr_otu_table = $outdir."/otu_tables/otu_table.tsv";
}

# Double check fasta file to only keep sequences that are in the otu table. Will save time for the PyNAST alignment step.
my $rO_jobFilterForPyNAST = MicrobialEcology::filterForPyNAST(
	\%cfg,
	$curr_otu_table,
	$curr_fasta,
	$outdir."/obs/obs_filtered_parsed.fasta"
);
if(!$rO_jobFilterForPyNAST->isUp2Date()) {
	SubmitToCluster::printSubmitCmd(\%cfg, "filter_for_pynast", "filter_for_pynast", "FILTERFORPYNAST", $dependency, "global", $rO_jobFilterForPyNAST) if($start_at <= $currStep && $end_at >= $currStep); 
	$dependency = $rO_jobFilterForPyNAST->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
}
print STDERR "[DEBUG]\tStep #".$currStep." filter_for_pynast\n";
$currStep++;

# Replace current fasta file with the parsed fasta file.
$curr_fasta = $outdir."/obs/obs_filtered_parsed.fasta";

print STDERR "[DEBUG] infile cluster fasta: " . $otu_table_prefix . "\n" if($verbose);
# Do not compute tree (PyNAST -> filter_alignment.py -> FastTree) if no mapping file is provided.
if(defined($mapping_file)){
	unless($no_unifrac){
		
		#################################
		# PyNAST
		#
		my $rO_jobPyNAST = MicrobialEcology::PyNAST(
			\%cfg,
			$curr_fasta,
			$outdir."/pynast/pynast.log",
			$outdir."/pynast/pynast.fasta"
		);
		if(!$rO_jobPyNAST->isUp2Date()) {
			SubmitToCluster::printSubmitCmd(\%cfg, "pynast", "pynast", "PYNAST", $dependency, "global", $rO_jobPyNAST) if($start_at <= $currStep && $end_at >= $currStep); 
			$dependency = $rO_jobPyNAST->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
		}
		print STDERR "[DEBUG]\tStep #".$currStep." pynast\n";
		$currStep++;
	
		# Filter alignment
		my $rO_jobFilterPyNASTAlignment = MicrobialEcology::filterPyNASTAlignment(
			\%cfg,
			$outdir."/pynast/pynast.fasta",
			$outdir."/pynast/"
		);
		if(!$rO_jobFilterPyNASTAlignment->isUp2Date()) {
			SubmitToCluster::printSubmitCmd(\%cfg, "filter_pynast_alignment", "filter_pynast_alignment", "FILTERPYNAST", $dependency, "global", $rO_jobFilterPyNASTAlignment) if($start_at <= $currStep && $end_at >= $currStep); 
			$dependency = $rO_jobFilterPyNASTAlignment->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
		}
		print STDERR "[DEBUG]\tStep #".$currStep." filter_pynast_alignment\n";
		$currStep++;
	
		# FastTree
		my $rO_jobFastTree = MicrobialEcology::fasttree(
			\%cfg,
			$outdir."/pynast/pynast_pfiltered.fasta",
			$outdir."/fasttree/tree.fasttree"
		);
		if(!$rO_jobFastTree->isUp2Date()) {
			SubmitToCluster::printSubmitCmd(\%cfg, "fasttree", "fasttree", "FASTTREE", $dependency, "global", $rO_jobFastTree) if($start_at <= $currStep && $end_at >= $currStep); 
			$dependency = $rO_jobFastTree->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
		}
		print STDERR "[DEBUG]\tStep #".$currStep." fasttree\n";
		$currStep++;
	}
}
	
#################################
# Filter OTU table (remove 
# columns that contains all zeros
# ). Will crash on upcoming steps
# if we don't do so here...
my $rO_jobFilterOTUTable = MicrobialEcology::filterOTUTable(
	\%cfg,
	$curr_otu_table,
	$outdir."/otu_tables/otu_table_filtered.tsv"
);
if(!$rO_jobFilterOTUTable->isUp2Date()) {
	SubmitToCluster::printSubmitCmd(\%cfg, "filter_otu_table", "filter_otu_table", "FILTEROTUTABLE", $dependency, "global", $rO_jobFilterOTUTable) if($start_at <= $currStep && $end_at >= $currStep); 
	$dependency = $rO_jobFilterOTUTable->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
}
print STDERR "[DEBUG]\tStep #".$currStep." filter_otu_table\n";
$currStep++;
		
#################################
# Convert OTU table to biom table
#
my $rO_jobConvertOTUToBiom = MicrobialEcology::convertOTUToBiom(
	\%cfg,
	$outdir."/otu_tables/otu_table_filtered.tsv",
	$outdir."/otu_tables/otu_table_filtered.biom"
);
if(!$rO_jobConvertOTUToBiom->isUp2Date()) {
	SubmitToCluster::printSubmitCmd(\%cfg, "convert_otu_to_biom", "convert_otu_to_biom", "CONVERTOTUTOBIOM", $dependency, "global", $rO_jobConvertOTUToBiom) if($start_at <= $currStep && $end_at >= $currStep); 
	$dependency = $rO_jobConvertOTUToBiom->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
}
print STDERR "[DEBUG]\tStep #".$currStep." convert_otu_table\n";
$currStep++;

$curr_otu_table = $outdir."/otu_tables/otu_table_filtered.biom";
my $curr_otu_table_tsv = $outdir."/otu_tables/otu_table_filtered.tsv";

#################################
# Summarize taxonomy with 
# absolute abundance
#
for(my $i=1; $i<7; $i++){

	my $rO_jobSummarizeTaxonomyAbsolute = MicrobialEcology::summarizeTaxonomyAbsolute(
		\%cfg,
		$outdir."/otu_tables/otu_table_filtered.biom",
		$i,
		$outdir."/tax_summary/absolute/"
	);
	if(!$rO_jobSummarizeTaxonomyAbsolute->isUp2Date()) {
		SubmitToCluster::printSubmitCmd(\%cfg, "summarize_taxonomy", "summarize_taxonomy_absolute_L$i", "SUMMARIZETAXONOMYABSOLUTE", $dependency, "global", $rO_jobSummarizeTaxonomyAbsolute) if($start_at <= $currStep && $end_at >= $currStep); 
		$dependency = $rO_jobSummarizeTaxonomyAbsolute->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
	}	
	print STDERR "[DEBUG]\tStep #".$currStep." summarize_taxonomy_absolute_L".$i."\n";
	$currStep++;
}

#################################
# Summarize taxonomy with 
# relative abundance
#
for(my $i=1; $i<7; $i++){
	my $rO_jobSummarizeTaxonomyRelative = MicrobialEcology::summarizeTaxonomyRelative(
		\%cfg,
		$outdir."/otu_tables/otu_table_filtered.biom",
		$i,
		$outdir."/tax_summary/relative/"
	);
	if(!$rO_jobSummarizeTaxonomyRelative->isUp2Date()) {
		SubmitToCluster::printSubmitCmd(\%cfg, "summarize_taxonomy", "summarize_taxonomy_relative_L$i", "SUMMARIZETAXONOMYRELATIVE", $dependency, "global", $rO_jobSummarizeTaxonomyRelative) if($start_at <= $currStep && $end_at >= $currStep); 
		$dependency = $rO_jobSummarizeTaxonomyRelative->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
	}
	print STDERR "[DEBUG]\tStep #".$currStep." summarize_taxonomy_relative_L".$i."\n";
	$currStep++;
}

#################################
# Qiime make taxa plot absolute 
# abundance Do it for both 
# bacteria/archaea/fungi and raw 
# table
#
$otu_table_prefix = "otu_table_filtered";
my $rO_jobPlotTaxa = MicrobialEcology::plotTaxa(
	\%cfg,
	$outdir."/tax_summary/absolute/".$otu_table_prefix."_L1.txt,".$outdir."/tax_summary/absolute/".$otu_table_prefix."_L2.txt,".$outdir."/tax_summary/absolute/".$otu_table_prefix."_L3.txt,".$outdir."/tax_summary/absolute/".$otu_table_prefix."_L4.txt,".$outdir."/tax_summary/absolute/".$otu_table_prefix."_L5.txt,".$outdir."/tax_summary/absolute/".$otu_table_prefix."_L6.txt",
	$outdir."/tax_summary/plots"
);
if(!$rO_jobPlotTaxa->isUp2Date()) {
	SubmitToCluster::printSubmitCmd(\%cfg, "plot_taxonomy", "plot_taxonomy_absolute", "PLOTTAXONOMYABSOLUTE", $dependency, "global", $rO_jobPlotTaxa) if($start_at <= $currStep && $end_at >= $currStep); 
	$dependency = $rO_jobPlotTaxa->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
}
print STDERR "[DEBUG]\tStep #".$currStep." plot_taxonomy_absolute\n";
$currStep++;

# Do not compute and generates reports for Beta diversity metrics if no mapping file is provided.
if(defined($mapping_file)){
	#Qiime PCA unifrac (do unweighted, weighted and bray_curtis)

	unless($no_unifrac){
		
		#################################
		# Beta-div
		#
		my $rO_jobBetaDivUnweighted = MicrobialEcology::betaDiversity(
			\%cfg,
			$outdir."/otu_tables/otu_table_filtered.biom",
			"unweighted_unifrac",
			$outdir."/beta_div/",
			$outdir."/fasttree/tree.fasttree"
		);
		if(!$rO_jobBetaDivUnweighted->isUp2Date()) {
			SubmitToCluster::printSubmitCmd(\%cfg, "beta_diversity", "beta_diversity_unweighted", "BETADIVUNWEIGHTED", $dependency, "global", $rO_jobBetaDivUnweighted) if($start_at <= $currStep && $end_at >= $currStep); 
			$dependency = $rO_jobBetaDivUnweighted->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
		}
		print STDERR "[DEBUG]\tStep #".$currStep." beta_diversity_unweighted\n";
		$currStep++;
		
		my $rO_jobBetaDivWeighted = MicrobialEcology::betaDiversity(
			\%cfg,
			$outdir."/otu_tables/otu_table_filtered.biom",
			"weighted_unifrac",
			$outdir."/beta_div/",
			$outdir."/fasttree/tree.fasttree"
		);
		if(!$rO_jobBetaDivWeighted->isUp2Date()) {
			SubmitToCluster::printSubmitCmd(\%cfg, "beta_diversity", "beta_diversity_weighted", "BETADIVWEIGHTED", $dependency, "global", $rO_jobBetaDivWeighted) if($start_at <= $currStep && $end_at >= $currStep); 
			$dependency = $rO_jobBetaDivWeighted->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
		}
		print STDERR "[DEBUG]\tStep #".$currStep." beta_diversity_weighted\n";
		$currStep++;
	}
		
	my $rO_jobBetaDivBrayCurtis = MicrobialEcology::betaDiversity(
		\%cfg,
		$outdir."/otu_tables/otu_table_filtered.biom",
		"bray_curtis",
		$outdir."/beta_div/",
		$outdir."/fasttree/tree.fasttree"
	);
	if(!$rO_jobBetaDivBrayCurtis->isUp2Date()) {
		SubmitToCluster::printSubmitCmd(\%cfg, "beta_diversity", "beta_diversity_braycurtis", "BETADIVBRAYCURTIS", $dependency, "global", $rO_jobBetaDivBrayCurtis) if($start_at <= $currStep && $end_at >= $currStep); 
		$dependency = $rO_jobBetaDivBrayCurtis->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
	}
	print STDERR "[DEBUG]\tStep #".$currStep." beta_diversity_bray_curtis\n";
	$currStep++;

	unless($no_unifrac){ #Read as: unless --no_unifrac is defined, do this {}
		
		#################################
		# principal component (UniFrac 
		# unweighted)
		#
		my $rO_jobPCAUnweighted = MicrobialEcology::principalCoordinates(
			\%cfg,
			#$outdir."/otu_tables/otu_table_filtered.biom",
			$outdir."/beta_div/unweighted_unifrac_".$otu_table_prefix.".txt",
			$outdir."/beta_div/unweighted_unifrac_".$otu_table_prefix."_coords.tsv"
		);
		if(!$rO_jobPCAUnweighted->isUp2Date()) {
			SubmitToCluster::printSubmitCmd(\%cfg, "principal_coordinates", "principal_coordinates_unweighted", "PCAUNWEIGHTED", $dependency, "global", $rO_jobPCAUnweighted) if($start_at <= $currStep && $end_at >= $currStep); 
			$dependency = $rO_jobPCAUnweighted->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
		}
		print STDERR "[DEBUG]\tStep #".$currStep." principal_coordinates_unweighted\n";
		$currStep++;
		
		#################################
		# principal component (UniFrac 
		# weighted)
		#
		my $rO_jobPCAweighted = MicrobialEcology::principalCoordinates(
			\%cfg,
			#$outdir."/otu_tables/otu_table_filtered.biom",
			$outdir."/beta_div/weighted_unifrac_".$otu_table_prefix.".txt",
			$outdir."/beta_div/weighted_unifrac_".$otu_table_prefix."_coords.tsv"
		);
		if(!$rO_jobPCAweighted->isUp2Date()) {
			SubmitToCluster::printSubmitCmd(\%cfg, "principal_coordinates", "principal_coordinates_weighted", "PCAWEIGHTED", $dependency, "global", $rO_jobPCAweighted) if($start_at <= $currStep && $end_at >= $currStep); 
			$dependency = $rO_jobPCAweighted->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
		}
		print STDERR "[DEBUG]\tStep #".$currStep." principal_coordinates_weighted\n";
		$currStep++;
	}	

	#################################
	# principal component (Bray 
	# curtis)
	#
	my $rO_jobPCAbraycurtis = MicrobialEcology::principalCoordinates(
		\%cfg,
		#$outdir."/otu_tables/otu_table_filtered.biom",
		$outdir."/beta_div/bray_curtis_".$otu_table_prefix.".txt",
		$outdir."/beta_div/bray_curtis_".$otu_table_prefix."_coords.tsv"
	);
	if(!$rO_jobPCAbraycurtis->isUp2Date()) {
		SubmitToCluster::printSubmitCmd(\%cfg, "principal_coordinates", "principal_coordinates_braycurtis", "PCABRAYCURTIS", $dependency, "global", $rO_jobPCAbraycurtis) if($start_at <= $currStep && $end_at >= $currStep); 
		$dependency = $rO_jobPCAbraycurtis->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
	}	
	print STDERR "[DEBUG]\tStep #".$currStep." principal_coordinates_braycurtis\n";
	$currStep++;
	
	unless($no_unifrac){
		
		#################################
		# PCA plots
		#

		# Generate PCA plots (unweighted)
		my $rO_job2dPlotsUnweighted = MicrobialEcology::pca2dPlot(
			\%cfg,
			$outdir."/beta_div/unweighted_unifrac_".$otu_table_prefix."_coords.tsv",
			$outdir."/beta_div/plots/"
		);
		if(!$rO_job2dPlotsUnweighted->isUp2Date()) {
			SubmitToCluster::printSubmitCmd(\%cfg, "pca_plot", "pca2dplot_unweighted", "PCA2DPLOTUNWEIGHTED", $dependency, "global", $rO_job2dPlotsUnweighted) if($start_at <= $currStep && $end_at >= $currStep); 
			$dependency = $rO_job2dPlotsUnweighted->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
		}
		print STDERR "[DEBUG]\tStep #".$currStep." pca2dplot_unweighted\n";
		$currStep++;

		my $rO_job3dPlotsUnweighted = MicrobialEcology::pca3dPlot(
			\%cfg,
			$outdir."/beta_div/unweighted_unifrac_".$otu_table_prefix."_coords.tsv",
			$outdir."/beta_div/3d_plots/"
		);
		if(!$rO_job3dPlotsUnweighted->isUp2Date()) {
			SubmitToCluster::printSubmitCmd(\%cfg, "pca_plot", "pca3dplot_unweighted", "PCA3DPLOTUNWEIGHTED", $dependency, "global", $rO_job3dPlotsUnweighted) if($start_at <= $currStep && $end_at >= $currStep); 
			$dependency = $rO_job3dPlotsUnweighted->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
		}
		print STDERR "[DEBUG]\tStep #".$currStep." pca3dplot_unweighted\n";
		$currStep++;
	
		# Generate PCA plots (weighted)
		my $rO_job2dPlotsWeighted = MicrobialEcology::pca2dPlot(
			\%cfg,
			$outdir."/beta_div/weighted_unifrac_".$otu_table_prefix."_coords.tsv",
			$outdir."/beta_div/plots/"
		);
		if(!$rO_job2dPlotsWeighted->isUp2Date()) {
			SubmitToCluster::printSubmitCmd(\%cfg, "pca_plot", "pca2dplot_weighted", "PCA2DPLOTWEIGHTED", $dependency, "global", $rO_job2dPlotsWeighted) if($start_at <= $currStep && $end_at >= $currStep); 
			$dependency = $rO_job2dPlotsWeighted->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
		}
		print STDERR "[DEBUG]\tStep #".$currStep." pca2dplot_weighted\n";
		$currStep++;

		my $rO_job3dPlotsWeighted = MicrobialEcology::pca3dPlot(
			\%cfg,
			$outdir."/beta_div/weighted_unifrac_".$otu_table_prefix."_coords.tsv",
			$outdir."/beta_div/3d_plots/"
		);
		if(!$rO_job3dPlotsWeighted->isUp2Date()) {
			SubmitToCluster::printSubmitCmd(\%cfg, "pca_plot", "pca3dplot_weighted", "PCA3DPLOTWEIGHTED", $dependency, "global", $rO_job3dPlotsWeighted) if($start_at <= $currStep && $end_at >= $currStep); 
			$dependency = $rO_job3dPlotsWeighted->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
		}
		print STDERR "[DEBUG]\tStep #".$currStep." pca3dplot_weighted\n";
		$currStep++;
	}

	# Generate PCA plots (Bray curtis)
	my $rO_job2dPlotsBrayCurtis = MicrobialEcology::pca2dPlot(
		\%cfg,
		$outdir."/beta_div/bray_curtis_".$otu_table_prefix."_coords.tsv",
		$outdir."/beta_div/plots/"
	);
	if(!$rO_job2dPlotsBrayCurtis->isUp2Date()) {
		SubmitToCluster::printSubmitCmd(\%cfg, "pca_plot", "pca2dplot_braycurtis", "PCA2DPLOTBRAYCURTIS", $dependency, "global", $rO_job2dPlotsBrayCurtis) if($start_at <= $currStep && $end_at >= $currStep); 
		$dependency = $rO_job2dPlotsBrayCurtis->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
	}	
	print STDERR "[DEBUG]\tStep #".$currStep." pca2plot_braycurtis\n";
	$currStep++;

	my $rO_job3dPlotsBrayCurtis = MicrobialEcology::pca3dPlot(
		\%cfg,
		$outdir."/beta_div/bray_curtis_".$otu_table_prefix."_coords.tsv",
		$outdir."/beta_div/3d_plots/"
	);
	if(!$rO_job3dPlotsBrayCurtis->isUp2Date()) {
		SubmitToCluster::printSubmitCmd(\%cfg, "pca_plot", "pca3dplot_braycurtis", "PCA3DPLOTBRAYCURTIS", $dependency, "global", $rO_job3dPlotsBrayCurtis) if($start_at <= $currStep && $end_at >= $currStep); 
		$dependency = $rO_job3dPlotsBrayCurtis->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
	}
	print STDERR "[DEBUG]\tStep #".$currStep." pca3dplot_braycurtis\n";
	$currStep++;

	#################################	
	# Rarefaction
	#
	my $rO_jobMultipleRarefaction = MicrobialEcology::multipleRarefaction(
		\%cfg,
		$curr_otu_table,
		$curr_otu_table_tsv,
		$outdir."/alpha_div/rarefaction/",
		$outdir."/alpha_div/"
	);
	if(!$rO_jobMultipleRarefaction->isUp2Date()) {
		SubmitToCluster::printSubmitCmd(\%cfg, "multiple_rarefaction", "multiple_rarefaction", "MULTIPLERAREFACTION", $dependency, "global", $rO_jobMultipleRarefaction) if($start_at <= $currStep && $end_at >= $currStep); 
		$dependency = $rO_jobMultipleRarefaction->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
	}
	print STDERR "[DEBUG]\tStep #".$currStep." multiple_rarefaction\n";
	$currStep++;
	
	#################################	
	# ALPHA DIVERSITY
	#
	my $rO_jobAlphaDiversity = MicrobialEcology::alphaDiversity(
		\%cfg,
		$outdir."/alpha_div/rarefaction/",
		$outdir."/alpha_div/alpha_rarefaction/"
	);
	if(!$rO_jobAlphaDiversity->isUp2Date()) {
		SubmitToCluster::printSubmitCmd(\%cfg, "alpha_diversity", "alpha_diversity", "ALPHADIVERSITY", $dependency, "global", $rO_jobAlphaDiversity) if($start_at <= $currStep && $end_at >= $currStep); 
		$dependency = $rO_jobAlphaDiversity->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
	}
	print STDERR "[DEBUG]\tStep #".$currStep." alpha_diversity\n";
	$currStep++;
	
	#################################	
	# Collate alpha diversity files
	#
	my $rO_jobCollateAlpha = MicrobialEcology::collateAlpha(
		\%cfg,
		$outdir."/alpha_div/alpha_rarefaction/",
		$outdir."/alpha_div/collated/"
	);
	if(!$rO_jobCollateAlpha->isUp2Date()) {
		SubmitToCluster::printSubmitCmd(\%cfg, "collate_alpha", "collate_alpha", "COLLATEALPHA", $dependency, "global", $rO_jobCollateAlpha) if($start_at <= $currStep && $end_at >= $currStep); 
		$dependency = $rO_jobCollateAlpha->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
	}
	print STDERR "[DEBUG]\tStep #".$currStep." collate_alpha\n";
	$currStep++;
	
	#################################	
	# Generate rarefaction plots
	#
	my $rO_jobRarefactionPlots = MicrobialEcology::rarefactionPlots(
		\%cfg,
		$outdir."/alpha_div/collated/",
		$outdir."/alpha_div/plots/"
	);
	if(!$rO_jobRarefactionPlots->isUp2Date()) {
		SubmitToCluster::printSubmitCmd(\%cfg, "rarefaction_plots", "rarefaction_plots", "RAREFACTIONPLOTS", $dependency, "global", $rO_jobRarefactionPlots) if($start_at <= $currStep && $end_at >= $currStep); 
		$dependency = $rO_jobRarefactionPlots->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
	}
	print STDERR "[DEBUG]\tStep #".$currStep." rarefaction_plots\n";
	$currStep++;
}

#################################	
# UPGMA CLUSTERING AND HEATMAPS
#
if($mapping_file){

	# UPGMA Clustering
	my $rO_jobUPGMAClusteringUnweighted = MicrobialEcology::upgmaClustering(
		\%cfg,
		$outdir."/beta_div/unweighted_unifrac_".$otu_table_prefix.".txt",
		$outdir."/beta_div/unweighted_unifrac_".$otu_table_prefix."_UPGMA.tree"
	);
	if(!$rO_jobUPGMAClusteringUnweighted->isUp2Date()) {
		SubmitToCluster::printSubmitCmd(\%cfg, "upgma_clustering", "upgma_clustering_unweighted", "UPGMACLUSTERINGUNWEIGHTED", $dependency, "global", $rO_jobUPGMAClusteringUnweighted) if($start_at <= $currStep && $end_at >= $currStep); 
		$dependency = $rO_jobUPGMAClusteringUnweighted->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
	}
	print STDERR "[DEBUG]\tStep #".$currStep." upgma_clustering_unweighted\n";
	$currStep++;

	my $rO_jobUPGMAClusteringWeighted = MicrobialEcology::upgmaClustering(
		\%cfg,
		$outdir."/beta_div/weighted_unifrac_".$otu_table_prefix.".txt",
		$outdir."/beta_div/weighted_unifrac_".$otu_table_prefix."_UPGMA.tree"
	);
	if(!$rO_jobUPGMAClusteringWeighted->isUp2Date()) {
		SubmitToCluster::printSubmitCmd(\%cfg, "upgma_clustering", "upgma_clustering_weighted", "UPGMACLUSTERINGWEIGHTED", $dependency, "global", $rO_jobUPGMAClusteringWeighted) if($start_at <= $currStep && $end_at >= $currStep); 
		$dependency = $rO_jobUPGMAClusteringWeighted->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
	}
	print STDERR "[DEBUG]\tStep #".$currStep." upgma_clustering_weighted\n";
	$currStep++;
	
	my $rO_jobUPGMAClusteringBrayCurtis = MicrobialEcology::upgmaClustering(
		\%cfg,
		$outdir."/beta_div/bray_curtis_".$otu_table_prefix.".txt",
		$outdir."/beta_div/bray_curtis_".$otu_table_prefix."_UPGMA.tree"
	);
	if(!$rO_jobUPGMAClusteringBrayCurtis->isUp2Date()) {
		SubmitToCluster::printSubmitCmd(\%cfg, "upgma_clustering", "upgma_clustering_braycurtis", "UPGMACLUSTERINGBRAYCURTIS", $dependency, "global", $rO_jobUPGMAClusteringBrayCurtis) if($start_at <= $currStep && $end_at >= $currStep); 
		$dependency = $rO_jobUPGMAClusteringBrayCurtis->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
	}
	print STDERR "[DEBUG]\tStep #".$currStep." upgma_clustering_braycurtis\n";
	$currStep++;	
}

#################################	
# OTU HEAT MAP
#
my $rO_jobOTUHeatMap = MicrobialEcology::otuHeatMap(
	\%cfg,
	$curr_otu_table_tsv,
  $outdir."/heatmap/",
  "OTU_heatmap"
);
if(!$rO_jobOTUHeatMap->isUp2Date()) {
	SubmitToCluster::printSubmitCmd(\%cfg, "otu_heatmap", "otu_heatmap", "OTUHEATMAP", $dependency, "global", $rO_jobOTUHeatMap) if($start_at <= $currStep && $end_at >= $currStep); 
	$dependency = $rO_jobOTUHeatMap->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
}
print STDERR "[DEBUG]\tStep #".$currStep." otu_heatmap\n";
$currStep++;

#################################	
# generate a phylum barplot for 
# a quick view of how the data 
# looks like.
#
my $rO_jobPhylumBarplot = MicrobialEcology::phylumBarplot(
	\%cfg,
	$outdir."/tax_summary/relative/".$otu_table_prefix."_L2.txt",
	$outdir."/tax_summary/",	
	"taxonomy_phylum_L2_relative"
);
if(!$rO_jobPhylumBarplot->isUp2Date()) {
	SubmitToCluster::printSubmitCmd(\%cfg, "phylum_barplot", "phylum_barplot_relative", "PHYLUMBARPLOTALL", $dependency, "global", $rO_jobPhylumBarplot) if($start_at <= $currStep && $end_at >= $currStep); 
	$dependency = $rO_jobPhylumBarplot->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
}
print STDERR "[DEBUG]\tStep #".$currStep." phylum_barplot_relative\n";
$currStep++;

my $rO_jobPhylumBarplotAbsolute = MicrobialEcology::phylumBarplot(
	\%cfg,
	$outdir."/tax_summary/absolute/".$otu_table_prefix."_L2.txt",
	$outdir."/tax_summary/",	
	"taxonomy_phylum_L2_absolute"
);
if(!$rO_jobPhylumBarplotAbsolute->isUp2Date()) {
	SubmitToCluster::printSubmitCmd(\%cfg, "phylum_barplot", "phylum_barplot_absolute", "PHYLUMBARPLOTABSOLUTE", $dependency, "global", $rO_jobPhylumBarplotAbsolute) if($start_at <= $currStep && $end_at >= $currStep); 
	$dependency = $rO_jobPhylumBarplotAbsolute->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
}
print STDERR "[DEBUG]\tStep #".$currStep." phylum_barplot_absolute\n";
$currStep++;

exit;

#################
## SUBROUTINES ##
#################
#######################
# remove temp files
#
sub END{
	local $?;
	my $rO_jobCleanup = RRNAAmplicons::cleanup(
		\%cfg,
		$tmpdir
	);
	if(!$rO_jobCleanup->isUp2Date()) {
		SubmitToCluster::printSubmitCmd(\%cfg, "cleanup", "cleanup", "CLEANUP", $dependency, "global", $rO_jobCleanup) if($start_at <= $currStep && $end_at >= $currStep); 
		$dependency = $rO_jobCleanup->getCommandJobId(0) if($start_at <= $currStep && $end_at >= $currStep);
	}
	print STDERR "[DEBUG]\tStep #".$currStep." cleanup\n";
	$currStep++;
}

# Return commat formatted numbers
# $_[0] - a number
# @returns comma-formatted number
sub commify {
    my $text = reverse $_[0];
    $text =~ s/(\d\d\d)(?=\d)(?!\d*\.)/$1,/g;
    return scalar reverse $text
}
	
# sub makedirs: Make directories for each type of analyses. 
# @input: a directory
# @returns: nothin'!
sub makeSubDirs{
	my $prefix = shift;	

	print STDOUT ("mkdir -p $prefix\n");
	print STDOUT ("mkdir -p $prefix/heatmap\n");	

	my $obs_dir = $prefix."/obs";
	print STDOUT ("mkdir -p $obs_dir\n");

	my $fasttree_dir = $prefix."/fasttree";
	print STDOUT ("mkdir -p $fasttree_dir\n");

	my $rdp_dir = $prefix."/rdp";
	print STDOUT ("mkdir -p $rdp_dir\n");

	my $otu_table_dir = $prefix."/otu_tables";
	print STDOUT ("mkdir -p $otu_table_dir\n");

	my $tax_dir = $prefix."/tax_summary";
	print STDOUT ("mkdir -p $tax_dir\n");
	print STDOUT ("mkdir -p $tax_dir/absolute\n");
	print STDOUT ("mkdir -p $tax_dir/relative\n");
	print STDOUT ("mkdir -p $tax_dir/plots\n");

	my $beta_div_dir = $prefix."/beta_div";
	print STDOUT ("mkdir -p $beta_div_dir\n");
	print STDOUT ("mkdir -p $beta_div_dir/plots\n");
	
	my $alpha_div_dir = $prefix."/alpha_div";
	print STDOUT ("mkdir -p $alpha_div_dir\n");
	print STDOUT ("mkdir -p $alpha_div_dir/rarefaction\n");
	print STDOUT ("mkdir -p $alpha_div_dir/alpha_rarefaction\n");
	print STDOUT ("mkdir -p $alpha_div_dir/collated\n");
	print STDOUT ("mkdir -p $alpha_div_dir/plots\n");
	
	my $pynast_dir = $prefix."/pynast";
	print STDOUT ("mkdir -p $pynast_dir\n");
}

