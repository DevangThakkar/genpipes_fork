#RRNATagger pipeline readme.
#This pipeline exists in two main part: 1) RRNATagger.pl and 2) RRNATagger_diversity.pl
#
#1) RRNATagger.pl will start from raw reads and generates OTU tables.
#2) RRNATagger_diversity.pl will start from the OTU tables generated in 1 and generates many diversity metrics (alpha div, beta div, etc.).
#
#The reason why this pipeline has been split into parts is because you might want to manually modify OTU tables (for many reasons)  generated by 1) and start from
#these filtered/modified tables to investigate diversity and other metrics. Another practical reason is that in production context, clients/PIs do not always give us an appropriately
#formatted mapping file which is needed to perform the second part of the pipeline.
#
# First copy RRNATagger.pl to your working dir.
# copy the ./scripts directory in your working dir.
# copy the mugqic_pipeline/lib dir into your working directory.
# copy one of the appropriate ini file template in your directory
# Carefully Edit the ini file depending on the type of data your will analyze.
#
# 1) For 454 and PacBio libraries, these are typically the values you want to
# enter in the .ini file.
# ## Values to modify 
# readLength=220 (final read length of your reads)
# qual=33
# projectName=your project name
# sequencer=454 or PacBio
# readConfig=1x220 # for 454 and PacBio, there are no such thing as paired end reads, so enter: 1x<read_length>    
# libraryType=nc1  # This means that the pipeline will only analyze Not Combined reads 1 (as opposed to combined/extended/assembled reads of MiSeq/HiSeq platforms)    
# mappingFile=./dummyMappingFile.tsv # Not important for RRNATagger.pl
# tmpDir=/path/to/my/scratch/dir/
#
# [report]
# report.title=RRNATagger_<PI>_<CCI>
# report.author=Your Name
# report.contact=your.name@mail.mcgill.ca
##
# 2) For MiSeq/HiSeq paired end libraries
# readLength=2500 (final read length of your reads)
# qual=33
# projectName=your project name
# sequencer=MiSeq or HiSeq
# readConfig=2x250 # For MiSeq/HiSeq libs, libraries will typically be of 2x250(or more) bp.    
# libraryType=ex  # This means that the pipeline will analyze combined/extended/assembled reads only of MiSeq/HiSeq platforms. 
#                 # If for some reason, quality of reads 2 is bad and unsuable, you can specify nc1 instead of ex (means reads#1/fwd reads only will be analyzed).  
#                 # If reads 1 are of bad quality, then specify nc2 (only reads#2/rev reads will be analyzed)              
# mappingFile=./dummyMappingFile.tsv # Not important for RRNATagger.pl
# tmpDir=/path/to/my/scratch/dir/
#
# [report]
# report.title=RRNATagger_<PI>_<CCI>
# report.author=Your Name
# report.contact=your.name@mail.mcgill.ca
#
# Then run sample setup (from MUGQIC tools repo) if internal libs from MUGQIC.
/path/to/sampleSetup.pl --nanuqAuthFile ~/nanuq_sample_setup.txt --projectId 9999 --tech miseq

# RRNATagger.pl has been design to support many configurations of sequencing runs (i.e. single, paired end reads). Here are different ways to run the pipeline according 
# to the type of library that is to be analyzed.
#
# Regardless of the type of library you have, 454, PacBio or MiSeq/HiSeq rRNA amplicons library, here is the command line you need to launch and the steps that will be performed:
# ./RRNATagger.pl --everything --external_infile ./reads_cutadapt_220.fastq --barcodes ./myBarcodes.fasta --config_file ./RRNATagger.abacus.ini --verbose --start_at 1 > commands.sh
./RRNATagger.pl --sampleSheet ./project.nanuq.csv --barcodes myBarcodes.fasta --bactArch --config_file myInifile.ini --verbose --start_at 1 --end_at 62 > commands_1-62.sh

# Steps in the RRNATagger pipeline can vary depending on the data types you
# are analyzing. These are the typical steps for a 2x250 MiSeq rRNA analysis:
# [DEBUG] Step #1 mergeBarcodes
# [DEBUG] Step #2 duk_wrapper_contam
# [DEBUG] Step #3 duk_wrapper_phix
# [DEBUG] Step #4 barcodes
# [DEBUG] Step #5 remove_unpaired
# [DEBUG] Step #6 split_pairs
# [DEBUG] Step #7 qscore_sheet_R1_raw
# [DEBUG] Step #8 qscore_sheet_R2_raw
# [DEBUG] Step #9 qscore_plot_R1R2_raw
# [DEBUG] Step #10 trim_R1
# [DEBUG] Step #11 trim_R2
# [DEBUG] Step #12 flash
# [DEBUG] Step #13 itags_QC
# [DEBUG] Step #14 qscore_sheet_ASS
# [DEBUG] Step #15 qscore_plot_ASS
# [DEBUG]   Step #16 clustering_method_3
# [DEBUG]   Step #17 RDP
# [DEBUG]   Step #18 add_taxonomy
# [DEBUG]   Step #19 filter_obs
# [DEBUG]   Step #20 split_otu_table
# [DEBUG]   Step #21 convert_otu_to_biom
# [DEBUG]   Step #22 convert_otu_to_biom2
# [DEBUG]   Step #23 convert_otu_to_biom3
# [DEBUG]   Step #24 rarefy
# [DEBUG]   Step #25 rarefy
# [DEBUG]   Step #26 filter_obs_table2X2
# [DEBUG]   Step #27 filter_obs_table2X2
# [DEBUG]   Step #28 filter_obs_table1X1
# [DEBUG]   Step #29 filter_obs_table1X1
# [DEBUG]   Step #30 summarize_taxonomy_absolute_L1
# [DEBUG]   Step #31 summarize_taxonomy_absolute_L2
# [DEBUG]   Step #32 summarize_taxonomy_absolute_L3
# [DEBUG]   Step #33 summarize_taxonomy_absolute_L4
# [DEBUG]   Step #34 summarize_taxonomy_absolute_L5
# [DEBUG]   Step #35 summarize_taxonomy_absolute_L6
# [DEBUG]   Step #36 summarize_taxonomy_relative_L1
# [DEBUG]   Step #37 summarize_taxonomy_relative_L2
# [DEBUG]   Step #38 summarize_taxonomy_relative_L3
# [DEBUG]   Step #39 summarize_taxonomy_relative_L4
# [DEBUG]   Step #40 summarize_taxonomy_relative_L5
# [DEBUG]   Step #41 summarize_taxonomy_relative_L6
# [DEBUG]   Step #42 summarize_taxonomy_absolute_raw_L1
# [DEBUG]   Step #43 summarize_taxonomy_absolute_raw_L2
# [DEBUG]   Step #44 summarize_taxonomy_absolute_raw_L3
# [DEBUG]   Step #45 summarize_taxonomy_absolute_raw_L4
# [DEBUG]   Step #46 summarize_taxonomy_absolute_raw_L5
# [DEBUG]   Step #47 summarize_taxonomy_absolute_raw_L6
# [DEBUG]   Step #48 summarize_taxonomy_relative_raw_L1
# [DEBUG]   Step #49 summarize_taxonomy_relative_raw_L2
# [DEBUG]   Step #50 summarize_taxonomy_relative_raw_L3
# [DEBUG]   Step #51 summarize_taxonomy_relative_raw_L4
# [DEBUG]   Step #52 summarize_taxonomy_relative_raw_L5
# [DEBUG]   Step #53 summarize_taxonomy_relative_raw_L6
# [DEBUG]   Step #54 plot_taxonomy_absolute
# [DEBUG]   Step #55 plot_taxonomy_absolute_raw
# [DEBUG]   Step #56 phylum_barplot_all
# [DEBUG]   Step #57 phylum_barplot_all_rel
# [DEBUG]   Step #58 phylum_barplot_bacteria_rarefied
# [DEBUG] Step #59 count_report
# [DEBUG] Step #60 txtToPdf
# [DEBUG] Step #61 merge_pdf
# [DEBUG] Step #62 Nozzle deliverables
# [DEBUG] Step #63 cleanup

################################################################################
# How to run RRNATagger_diversity.pl
# 
# Note that there is only one way of running RRNATagger_diversity.pl 
#
./RRNATagger_diversity.pl --infile_otu_table otu_table.tsv --infile_otu_fasta otu_seqs.fasta --barcodes myBarcodes.fasta --config_file myInifile.ini --start_at 1 > commands_diversity.sh
# Typically this where you will find the otu_table and fasta files from the RRNATagger.pl analysis.
# ./myBarcodes/assembled/otu_tables/otu_table_filtered_rarefied.tsv
# ./myBarcodes/assembled/obs/obs_filtered.fasta
#
#	Step #1 filter_for_pynast
#	Step #2 pynast
#	Step #3 filter_pynast_alignment
#	Step #4 fasttree
#	Step #5 filter_otu_table
#	Step #6 convert_otu_table
#	Step #7 summarize_taxonomy_absolute_L1
#	Step #8 summarize_taxonomy_absolute_L2
#	Step #9 summarize_taxonomy_absolute_L3
#	Step #10 summarize_taxonomy_absolute_L4
#	Step #11 summarize_taxonomy_absolute_L5
#	Step #12 summarize_taxonomy_absolute_L6
#	Step #13 summarize_taxonomy_relative_L1
#	Step #14 summarize_taxonomy_relative_L2
#	Step #15 summarize_taxonomy_relative_L3
#	Step #16 summarize_taxonomy_relative_L4
#	Step #17 summarize_taxonomy_relative_L5
#	Step #18 summarize_taxonomy_relative_L6
#	Step #19 plot_taxonomy_absolute
#	Step #20 beta_diversity_unweighted
#	Step #21 beta_diversity_weighted
#	Step #22 beta_diversity_bray_curtis
#	Step #23 principal_coordinates_unweighted
#	Step #24 principal_coordinates_weighted
#	Step #25 principal_coordinates_braycurtis
#	Step #26 pca2dplot_unweighted
#	Step #27 pca3dplot_unweighted
#	Step #28 pca2dplot_weighted
#	Step #29 pca3dplot_weighted
#	Step #30 pca2plot_braycurtis
#	Step #31 pca3dplot_braycurtis
#	Step #32 multiple_rarefaction
#	Step #33 alpha_diversity
#	Step #34 collate_alpha
#	Step #35 rarefaction_plots
#	Step #36 upgma_clustering_unweighted
#	Step #37 upgma_clustering_weighted
#	Step #38 upgma_clustering_braycurtis
#	Step #39 otu_heatmap
#	Step #40 phylum_barplot_all
#	Step #41 phylum_barplot_relative
#	Step #42 cleanup



