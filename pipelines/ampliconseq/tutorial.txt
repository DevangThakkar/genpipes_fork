####################################################################################################################################
=== SETTING ==
####################################################################################################################################

1) AmpliconSeq_script.py to copy in $MUGQIC_INSTALL_HOME/software/AmpliconSeq/

2a) IF you have a map file: copy the path to the "map_file" variable in the configuration file.
   eg: map_file=/lb/project/mugqic/projects/ptranvan/project/Shen/map_shen_presentation.txt  

   ELSE: Leave the variable empty. 
   eg: map_file=

2b) For the map file: All '_' character have to be replaced by '.' for the sample name. Exemple:

In readset.tsv:

Sample name : Ya_4_w3

In map file:

Sample name: Ya.4.w3


####################################################################################################################################
=== USAGE ==
####################################################################################################################################

1) To step 15: qiime_report

$MUGQIC_PIPELINES_HOME/pipelines/ampliconseq/ampliconseq.py -r readset.tsv -s 1-15 -c $MUGQIC_PIPELINES_HOME/pipelines/ampliconseq/ampliconseq.base.ini -o analysis > analysis.sh

NB1: This step can be long, some steps can be parallelized (step 6,7,9,12 - ie: uchime, otu_picking, otu_assigning, otu_alignment)
--> Modify manually the 'ppn' to set it as same as 'threads' variable number. 

NB2: For large data, set to >= 20 threads (and ppn) for uchime.
NB3: For large data, set to >= 20 threads (and more for ppn) for otu picking.
NB4: For large data, set to >= 15 threads (and ppn) for otu_alignment.
NB5: For large data, increase the walltime (> 24h) of phylogeny step (14) 

A) Report 1

$MUGQIC_PIPELINES_HOME/pipelines/ampliconseq/ampliconseq.py -r readset.tsv -s 1-15 -c $MUGQIC_PIPELINES_HOME/pipelines/ampliconseq/ampliconseq.base.ini -o analysis --report > report.sh

The report helps you to choose the maximum rarefaction treshold. It CAN'T be > than the max Filtered Paired Reads (Chimera detection section).
Report to the "multiple_rarefaction_max" variable in the configuration file.

4) To step 20: qiime_report2

$MUGQIC_PIPELINES_HOME/pipelines/ampliconseq/ampliconseq.py -r readset.tsv -s 16-20 -c $MUGQIC_PIPELINES_HOME/pipelines/ampliconseq/ampliconseq.base.ini -o analysis > analysis2.sh

B) Report 2

The report helps you to choose the single rarefaction treshold (for all the samples) by looking the rarefaction curves for each sample.
Report to the "single_rarefaction_depth" variable in the configuration file.

$MUGQIC_PIPELINES_HOME/pipelines/ampliconseq/ampliconseq.py -r readset.tsv -s 1-20 -c $MUGQIC_PIPELINES_HOME/pipelines/ampliconseq/ampliconseq.base.ini -o analysis --report > report.sh

if you have < 4 samples
------------------------

5) To step 27: plot_to_alpha

$MUGQIC_PIPELINES_HOME/pipelines/ampliconseq/ampliconseq.py -r readset.tsv -s 21-27 -c $MUGQIC_PIPELINES_HOME/pipelines/ampliconseq/ampliconseq.base.ini -o analysis > analysis3.sh

C) Report 3: analysis done

$MUGQIC_PIPELINES_HOME/pipelines/ampliconseq/ampliconseq.py -r readset.tsv -s 1-27 -c $MUGQIC_PIPELINES_HOME/pipelines/ampliconseq/ampliconseq.base.ini -o analysis --report > report.sh

else
----

5) To step 31: plot_to_beta

$MUGQIC_PIPELINES_HOME/pipelines/ampliconseq/ampliconseq.py -r readset.tsv -s 21-31 -c $MUGQIC_PIPELINES_HOME/pipelines/ampliconseq/ampliconseq.base.ini -o analysis > analysis4.sh

C) Report 3: analysis done

$MUGQIC_PIPELINES_HOME/pipelines/ampliconseq/ampliconseq.py -r readset.tsv -s 1-31 -c $MUGQIC_PIPELINES_HOME/pipelines/ampliconseq/ampliconseq.base.ini -o analysis --report > report.sh

####################################################################################################################################
####################################################################################################################################
